# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'b8614458-f0b5-4edc-ade9-f3a329d49d7c'
  imageRepository: 'crystalgaobloodpressurebe'
  containerRegistry: 'aksdevopsacrbp1353.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/BE/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'aksdevopsacrbp13532105464b-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
  - stage: BuildBE
    displayName: Build BE
    jobs:
      - job: Build_WAR
        displayName: Build WAR file
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Maven@4
            displayName: 'Build WAR file'
            inputs:
              mavenPomFile: '$(Build.SourcesDirectory)/BE/pom.xml'
              goals: 'clean package'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
              checkStyleRunAnalysis: true
              pmdRunAnalysis: true
              findBugsRunAnalysis: true

          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)

      - upload: manifests
        artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: BuildBE

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'crystalgao550bloodpressure-1214.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deploymentBE.yml
                $(Pipeline.Workspace)/manifests/serviceBE.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

